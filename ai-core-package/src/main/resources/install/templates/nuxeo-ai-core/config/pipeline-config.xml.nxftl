<?xml version="1.0"?>
<component name="org.nuxeo.runtime.stream.pipes.Pipeline.defaultConfig">
  <require>org.nuxeo.runtime.stream.service</require>
  <extension target="org.nuxeo.runtime.stream.service" point="logConfig">
<#if "${kafka.enabled}" == "true">
    <logConfig name="${nuxeo.pipes.config.name}" type="kafka">
      <option name="kafkaConfig">default</option>
    </logConfig>
<#else>
    <logConfig name="${nuxeo.pipes.config.name}" type="chronicle">
      <option name="retention">${nuxeo.stream.chronicle.retention.duration}</option>
    </logConfig>
</#if>
  </extension>

<extension point="pipes" target="org.nuxeo.runtime.stream.pipes.Pipeline">

  <pipe id="pipe.images" enabled="${nuxeo.pipes.images.enabled}">
    <supplier>
      <event name="pictureViewsGenerationDone">
        <filter class="org.nuxeo.runtime.stream.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.FacetFilter">
          <option name="includedFacets">Picture</option>
        </filter>
      </event>
      <event name="documentCreated">
        <filter class="org.nuxeo.runtime.stream.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.FacetFilter">
          <option name="excludedFacets">Picture,Folderish</option>
        </filter>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.MimeBlobPropertyFilter">
          <option name="mimePattern">image.*</option>
          <option name="properties">file:content</option>
        </filter>
      </event>
      <event name="documentModified">
        <filter class="org.nuxeo.runtime.stream.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.DirtyPropertyFilter"/>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.FacetFilter">
          <option name="excludedFacets">Picture,Folderish</option>
        </filter>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.MimeBlobPropertyFilter">
          <option name="mimePattern">image.*</option>
        </filter>
        <option name="properties">file:content</option>
      </event>
    </supplier>
    <consumer>
      <stream name="images"/>
    </consumer>
    <transformer class="org.nuxeo.runtime.stream.pipes.functions.PropertiesToStream">
      <option name="blobProperties">file:content</option>
      <option name="customProperties">picture:info/width,picture:info/height</option>
    </transformer>
  </pipe>

  <pipe id="pipe.video" enabled="${nuxeo.pipes.video.enabled}" function="org.nuxeo.runtime.stream.pipes.functions.PropertiesToStream">
    <supplier>
      <event name="documentCreated">
        <filter class="org.nuxeo.runtime.stream.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.MimeBlobPropertyFilter">
          <option name="mimePattern">video.*</option>
          <option name="properties">file:content</option>
        </filter>
      </event>
      <event name="documentModified">
        <filter class="org.nuxeo.runtime.stream.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.DirtyPropertyFilter"/>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.MimeBlobPropertyFilter">
          <option name="mimePattern">video.*</option>
        </filter>
        <option name="properties">file:content</option>
      </event>
    </supplier>
    <consumer>
      <stream name="video"/>
    </consumer>
    <transformer>
      <option name="blobProperties">file:content</option>
    </transformer>
  </pipe>

  <pipe id="pipe.audio" enabled="${nuxeo.pipes.audio.enabled}">
    <supplier>
      <event name="documentCreated">
        <filter class="org.nuxeo.runtime.stream.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.MimeBlobPropertyFilter">
          <option name="mimePattern">audio.*</option>
          <option name="properties">file:content</option>
        </filter>
      </event>
      <event name="documentModified">
        <filter class="org.nuxeo.runtime.stream.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.DirtyPropertyFilter"/>
        <filter class="org.nuxeo.runtime.stream.pipes.filters.MimeBlobPropertyFilter">
          <option name="mimePattern">audio.*</option>
        </filter>
        <option name="properties">file:content</option>
      </event>
    </supplier>
    <consumer>
      <stream name="audio"/>
    </consumer>
    <transformer>
      <option name="blobProperties">file:content</option>
    </transformer>
  </pipe>
</extension>

</component>
